# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types:
      - published

  workflow_dispatch:

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install verilator
      run: |
        sudo apt install -y --no-install-recommends verilator

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e '.[dev]'

    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        ruff check .

    - name: Test with pytest
      run: pytest

    - name: Upload coverage to codecov
      run: |
        pip install codecov
        codecov

  build:
    needs:
      - test
    name: Build distributions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install -U build

      - name: Build
        run: python -m build

      - uses: actions/upload-artifact@v3
        with:
          path: |
            dist/*.tar.gz
            dist/*.whl

  deploy:
    needs:
      - build

    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write

    # Only publish when a GitHub Release is created.
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1